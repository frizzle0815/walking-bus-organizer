"""Modify registration app models

Revision ID: 8d1f78f626a9
Revises: a9dda3838f8e
Create Date: 2025-07-05 07:06:16.324555

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '8d1f78f626a9'
down_revision = 'a9dda3838f8e'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('walking_bus_routes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('route_coordinates', sa.JSON(), nullable=False),
    sa.Column('color', sa.String(length=7), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    
    with op.batch_alter_table('prospects', schema=None) as batch_op:
        # Schritt 1: Spalten als nullable hinzufügen
        batch_op.add_column(sa.Column('child_name', sa.String(length=100), nullable=True))
        batch_op.add_column(sa.Column('school_class', sa.String(length=5), nullable=True))
        batch_op.add_column(sa.Column('walking_bus_route_id', sa.Integer(), nullable=True))
        
        # Koordinaten als required setzen
        batch_op.alter_column('latitude',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               nullable=False)
        batch_op.alter_column('longitude',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               nullable=False)
    
    # Schritt 2: Standardwerte für existierende Zeilen setzen
    # Erstelle eine Standard-Route falls keine existiert
    connection = op.get_bind()
    
    # Prüfe ob es bereits Routen gibt
    result = connection.execute(sa.text("SELECT COUNT(*) FROM walking_bus_routes"))
    route_count = result.scalar()
    
    if route_count == 0:
        # Erstelle eine Standard-Route
        connection.execute(sa.text("""
            INSERT INTO walking_bus_routes (name, description, route_coordinates, color, is_active, created_at, updated_at)
            VALUES ('Standard Route', 'Automatisch erstellte Standard-Route', '[]', '#FF0000', true, NOW(), NOW())
        """))
    
    # Hole die erste verfügbare Route-ID
    result = connection.execute(sa.text("SELECT id FROM walking_bus_routes WHERE is_active = true LIMIT 1"))
    default_route_id = result.scalar()
    
    # Aktualisiere existierende Prospects mit Standardwerten
    connection.execute(sa.text(f"""
        UPDATE prospects 
        SET 
            child_name = COALESCE(name, 'Unbekannt'),
            school_class = '1a',
            walking_bus_route_id = {default_route_id}
        WHERE child_name IS NULL OR school_class IS NULL OR walking_bus_route_id IS NULL
    """))
    
    # Schritt 3: Spalten auf NOT NULL setzen und Constraints hinzufügen
    with op.batch_alter_table('prospects', schema=None) as batch_op:
        batch_op.alter_column('child_name',
               existing_type=sa.String(length=100),
               nullable=False)
        batch_op.alter_column('school_class',
               existing_type=sa.String(length=5),
               nullable=False)
        batch_op.alter_column('walking_bus_route_id',
               existing_type=sa.Integer(),
               nullable=False)
        
        # Foreign Key Constraints
        batch_op.drop_constraint('prospects_route_id_fkey', type_='foreignkey')
        batch_op.create_foreign_key(None, 'walking_bus_routes', ['walking_bus_route_id'], ['id'])
        
        # Alte Spalten entfernen
        batch_op.drop_column('geocoded_address')
        batch_op.drop_column('name')
        batch_op.drop_column('address')
        batch_op.drop_column('route_preference')
        batch_op.drop_column('route_id')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('prospects', schema=None) as batch_op:
        batch_op.add_column(sa.Column('route_id', sa.INTEGER(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('route_preference', sa.VARCHAR(length=100), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('address', sa.VARCHAR(length=200), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('name', sa.VARCHAR(length=100), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('geocoded_address', sa.VARCHAR(length=200), autoincrement=False, nullable=True))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('prospects_route_id_fkey', 'routes', ['route_id'], ['id'])
        batch_op.alter_column('longitude',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               nullable=True)
        batch_op.alter_column('latitude',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               nullable=True)
        batch_op.drop_column('walking_bus_route_id')
        batch_op.drop_column('school_class')
        batch_op.drop_column('child_name')

    op.drop_table('walking_bus_routes')
    # ### end Alembic commands ###
